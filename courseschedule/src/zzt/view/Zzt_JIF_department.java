/*
 * Zzt_JIF_department.java
 *
 * Created on __DATE__, __TIME__
 */

package zzt.view;

import global.dao.Databaseconnection;
import global.dao.Departmentaccess;
import global.dao.ExcelFileFilter;
import global.dao.Fileselection;
import global.dao.Majoraccess;
import global.dao.Teachingtaskaccess;
import global.model.Classroom;
import global.model.Curriculum;
import global.model.Department;
import global.model.Fillcombobox;
import global.model.Major;
import global.model.Office;
import global.model.Schoolyear;
import global.model.Teacher;
import global.model.View_teacher;
import global.model.View_teachingtask;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import czy.model.Tools;
import zxx.dao.DepartmentAddTable;
import zxx.dao.PrintObjectExcel;
import zxx.dao.TestFileChooserUI;

/**
 *部门管理界面
 *		  dt：
 *			Department对象
 * @author  zzt
 */
public class Zzt_JIF_department extends javax.swing.JInternalFrame {
	private static final String String = null;
	private static final DepartmentAddTable DeptmentAddTable = null;
	private View_teacher dt;
	private int i1;
	private String file;
	private Connection con;
	private String[] args;
	private char[] department_List;
	private Connection conn;
	private String zhujian;
	private FileInputStream newFilename;

	/** Creates new form Zzt_JIF_department 
	 * @param department */
	public Zzt_JIF_department() {
		//初始化界面
		initComponents();
	}

	public Zzt_JIF_department(View_teacher dt) {
		// 初始化界面
		initComponents();
		// 将传递的参数（登录用户的视图信息）传递给类的对应属性字段
		this.dt = dt;
		//调用函数改变表格的宽高
		setColumnWidth();
		//调用函数显示用户的视图信息
		departmenttable();
	}

	/**
	 * 构造界面
	 * 
	 * @author zzt
	 * @param vt
	 *            ：登录用户的视图信息
	 */

	public void departmenttable() {
		//首先给变量设为空值
		String d_id = null;
		//声明DefaultTableModel 得到jtble1表格上的模型
		DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
		//设置表格的行数从0开始计数
		dtm.setRowCount(0);
		//初始化ArrayList列表，通过部门编号主键查询department（部门表）
		ArrayList<Department> aList = Departmentaccess.getDepartment(d_id);
		// 遍历部门的数组列表
		for (int i = 0; i < aList.size(); i++) {
			// 取出对应字段信息
			d_id = aList.get(i).getD_id();
			String d_name = aList.get(i).getD_name();
			// 生成向量类型变量
			Vector v = new Vector();
			// 将取得数据添加到向量中
			v.add(d_id);
			v.add(d_name);
			// 将向量添加到表格中
			dtm.addRow(v);
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jTextField1 = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jTextField2 = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();

		setClosable(true);
		setIconifiable(true);
		setTitle("\u90e8\u95e8\u7ba1\u7406");
		setOpaque(true);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.MatteBorder(null),
				"\u90e8\u95e8\u7ba1\u7406"));

		jTextField1.setEditable(false);

		jLabel2.setText("\u90e8\u95e8\u540d\u79f0\uff1a");

		jLabel1.setText("\u90e8\u95e8\u7f16\u53f7\uff1a");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel1)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												jTextField1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												111,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addComponent(jLabel2)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												jTextField2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												209,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel1)
														.addComponent(
																jTextField1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel2)
														.addComponent(
																jTextField2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "部门编号", "部门名称" }) {
			boolean[] canEdit = new boolean[] { false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jTable1MouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(jTable1);

		jButton1.setText("\u6dfb\u52a0");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("\u5220\u9664");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3.setText("\u4fee\u6539");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton5.setText("\u6570\u636e\u5bfc\u5165");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		jButton4.setText("\u9000\u51fa");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton6.setText("\u5bfc\u51fa\u6570\u636e\u8f93\u5165\u683c\u5f0f");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton7.setText("\u5bfc\u51fa\u6570\u636e\u754c\u9762\u683c\u5f0f");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														558, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		94,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		jButton2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		88,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		jButton3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		90,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(12, 12,
																		12)
																.addComponent(
																		jButton4,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		93,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(36, 36,
																		36)
																.addComponent(
																		jButton5,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		115,
																		Short.MAX_VALUE)))
								.addContainerGap())
				.addGroup(
						layout.createSequentialGroup()
								.addGap(53, 53, 53)
								.addComponent(jButton7,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										229, Short.MAX_VALUE)
								.addGap(36, 36, 36)
								.addComponent(jButton6,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										224,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(46, 46, 46)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jPanel1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										246,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jButton5,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton4,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														34,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														34,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														34,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton3,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														34,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jButton7,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton6,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														35, Short.MAX_VALUE))
								.addContainerGap()));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * 导出部门管理信息,将错误信息输出到str变量当中
	 * 
	 * @author zzt
	 */
	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//调用导出方法把文件的路径存放在tabletwo变量里
		File Filename = Fileselection.exportselect();
		File filenametow = new File(Filename + ".xls");
		String filetable = filenametow.toString();System.out.println(filetable);
		String d_id = null;
		//实例化部门列表，把部门信息存放在calist变量中
		ArrayList<Department> caList = Departmentaccess.getDepartment(d_id);
		//设置excel表头信息
		String[] header = { "部门编号", "部门名称" };
		if (Filename == null) {
			return;
		}
		//怎么拿到导出之后的文件名
		if (filenametow.exists()) {
			int overwriteSelect = JOptionPane.showConfirmDialog(this,
					"<html><font size=3>文件" + filenametow.getName()
							+ "已存在，是否覆盖?</font><html>", "是否覆盖?",
					JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
			System.out.println(overwriteSelect);
			if (overwriteSelect == JOptionPane.YES_OPTION) {

				List<String> aList = PrintObjectExcel.printExcel(caList,
						filetable, header);
				if (aList.size() == 0) {
					JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
							JOptionPane.INFORMATION_MESSAGE);
				} else {
					String str = "";
					for (String item : aList) {
						str += item + "\n";
					}
					JOptionPane.showMessageDialog(this, str, "错误信息",
							JOptionPane.ERROR_MESSAGE);
				}
			} else {
				return;
			}
		}
		List<String> aList = PrintObjectExcel.printExcel(caList, filetable,
				header);
		if (aList.size() == 0) {
			JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			String str = "";
			for (String item : aList) {
				str += item + "\n";
			}
			JOptionPane.showMessageDialog(this, str, "错误信息",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	/**
	 * 导入部门管理信息,将错误信息输出到str变量当中
	 * 
	 * @author zzt
	 * 
	 */
	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		String table = TestFileChooserUI.main(String);
		List<String> department_List = DepartmentAddTable
				.getDepartmentThrow(table);
		// 判断department_List的错误信息个数,如果为空则导入成功,刷新页面
		if (department_List.size() == 0 || department_List == null) {
			JOptionPane.showMessageDialog(this, "导入成功", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			departmenttable();

		} else {
			// 首先定义一个字符串变量为str
			String str = "";
			// 遍历数组列表错误信息
			for (String item : department_List) {
				// 把遍历过的错误信息,存放到str变量当中
				str += item + "\n";
			}
			// 提示信息：把错误信息输出到前台页面当中！
			throw_ok th = new throw_ok(null, true);
			th.infomation(str);
			th.setVisible(true);
		}
	}

	/**
	 * 删除部门管理信息
	 * 
	 * @author zzt
	 */
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		//记录jtble1面板当前的行数
		int i = jTable1.getSelectedRow();
		jTable1.setRowSelectionAllowed(true);
		String zztString = "";
		String zzt = "";
		//如果i==-1，说明没有选中行
		if (i == -1) {
			//提示信息：请选中要修改的记录
			JOptionPane.showMessageDialog(this, "请选中要删除的记录", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			return;
		} else {
			//定义一个数组变量row存放当前选中的所有行
			int[] row = jTable1.getSelectedRows();
			//定义一个count用来存放行数
			int count = row.length;
			//遍历行数
			for (int a = 0; a < count; a++) {
				//定义一个变量来存放部门编号的第row[a]行第0列
				String d_id = (String) jTable1.getValueAt(row[a], 0);
				//定义一个空字符串变量st
				String st = ",";
				//用来存放满足删除多条语句要求的sql语句
				zzt = "(" + (zztString += "'" + d_id + "'" + (st)) + ")";
				//如果sql语句的最后一个字符是“)”则删除最后两位字符在加上一个“)”
				if (zzt.endsWith(")")) {
					zzt = zzt.substring(0, zzt.length() - 2) + ")";
				}
			}
			//提示信息,确认要删除当前记录嘛？,如果确定，则删除当前选中的记录
			int r = JOptionPane.showConfirmDialog(this, "确认要删除当前记录嘛？", "确认信息",
					JOptionPane.OK_CANCEL_OPTION);
			if (r == 0) {
				Connection con = null;
				try {
					//创建数据库连接
					con = Databaseconnection.getconnection();
					//设置数据库连接的自动提交为(false)
					con.setAutoCommit(false);
					//定义一个整型变量re来存放结果集
					int re;
					//用re来记录删除部门编号的方法的结果集
					re = Departmentaccess.Delete(con, zzt);
					//如果结果集  > 0 则删除成功
					if (re > 0) {
						JOptionPane.showMessageDialog(this, "删除记录成功！", "确认信息",
								JOptionPane.INFORMATION_MESSAGE);
						//开启数据库的手动提交
						con.commit();
						//实时刷新jtble1表格数据
						departmenttable();
						jTextField1.setText("");
						jTextField2.setText("");
					} else {
						JOptionPane.showMessageDialog(this,
								"删除失败，请联系管理员进行相关操作！", "错误信息",
								JOptionPane.ERROR_MESSAGE);
					}

				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					//捕获错误异常情况进行处理,定义一个str变量,用来存放访问sql语句错误的状态值
					String str = "23000";
					//如果当前访问的状态值等于str,则提示相应信息
					if (e.getSQLState().equals(str)) {
						JOptionPane.showMessageDialog(this,
								"由于此编号有外键约束影响,暂时不能删除！", "提示信息",
								JOptionPane.INFORMATION_MESSAGE);
					}
				}
			}
		}
	}

	/**
	 * 设置表格的宽高
	 * 
	 * @author zzt
	 */
	private void setColumnWidth() {
		TableColumn Column;
		// 设置教学任务表格各列宽度
		Column = jTable1.getColumnModel().getColumn(0);
		Column.setPreferredWidth(50);
		Column = jTable1.getColumnModel().getColumn(1);
		Column.setPreferredWidth(250);
	}

	/**
	 * 修改部门管理信息
	 * 
	 * @author zzt
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		// 记录jtble1表格当前的行
		int i = jTable1.getSelectedRow();
		// 如果i==-1，说明没有选中行
		if (i == -1) {
			// 提示信息：请选中要修改的记录
			JOptionPane.showMessageDialog(this, "请选中要修改的记录", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			return;
		}
		// 如果jTextField1文本框中没有输入内容
		if (jTextField1.getText().equals("")) {
			// 提示信息:请输入部门编号
			JOptionPane.showMessageDialog(this, "请输入部门编号！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			jTextField1.requestFocus();
			return;
		}

		// 如果jTextField2文本框中没有输入内容
		if (jTextField2.getText().equals("")) {
			// 提示信息:请输入部门名称
			JOptionPane.showMessageDialog(this, "请输入部门名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			jTextField2.requestFocus();
			return;
		}
		// 定义一个变量来存放jtable1的第i行第0列的字符串
		String d_id = (String) jTable1.getValueAt(i, 0);
		// 定义一个变量来存放jtable1的第i行第1列的字符串
		String d_name = (String) jTable1.getValueAt(i, 1);
		// 定义一个d_id_zzt变量用来得到jTextField1文本框的内容
		String d_id_zzt = jTextField1.getText();
		// 定义一个d_name_zzt用来得到jTextField2文本框的内容
		String d_name_zzt = jTextField2.getText();
		// 声明数据库为空
		Connection con = null;
		try {
			// 创建数据库连接
			con = Databaseconnection.getconnection();
			//设置数据库的自动提交方式为false
			con.setAutoCommit(false);
			// 如果当前的文本框的内容和选中的对应的列的值不匹配的时,说明用户要修改信息！
			if (!(d_id_zzt.equals(d_id))) {
				// 访问数据库查询部门编号字段值,如果当前数据库对应的字段里面的值等于用户当前已经输入的值的情况下
				if (Departmentaccess.findid(con, d_id_zzt)) {
					// 提示信息：类型编号已经存在
					JOptionPane.showMessageDialog(this, "部门编号已经存在请重新输入",
							"错误信息", JOptionPane.ERROR_MESSAGE);
					// jTextField1文本框获得焦点
					jTextField1.requestFocus();
					// jtexfField1文本框全选
					jTextField1.selectAll();
					return;
				}
			}
			if (!(d_name_zzt.equals(d_name))) {
				if (Departmentaccess.findname(con, d_name_zzt)) {
					// 提示信息：部门名称已经存在
					JOptionPane.showMessageDialog(this, "部门名称已经存在请重新输入",
							"错误信息", JOptionPane.ERROR_MESSAGE);
					// jTextField1文本框获得焦点
					jTextField2.requestFocus();
					// jtexfField1文本框全选
					jTextField2.selectAll();
					return;
				}
			}
			// 判定当前的输入的d_id和d_name与数据库里面的d_id和d_name是否重复,如果重复则提示信息
			if ((d_id_zzt.equals(d_id)) && (d_name_zzt.equals(d_name))) {
				// 提示信息:请输入您要修改的信息！
				JOptionPane.showMessageDialog(this, "请输入您要修改的信息！", "提示信息",
						JOptionPane.INFORMATION_MESSAGE);
				return;
			}
			// 定义一个变量r用来存储update方法返回的结果集
			int r = Departmentaccess.update(con, d_id, new Department(d_id_zzt,
					jTextField2.getText()));
			// 如果结果集大于0的话
			if (r > 0) {
				// 提示信息修改成功
				JOptionPane.showMessageDialog(this, "修改成功", "提示信息",
						JOptionPane.INFORMATION_MESSAGE);
				jTextField1.setText("");
				jTextField2.setText("");
				//开启数据库手动提交方式
				con.commit();
				// 调用departmenttable方法进行实时刷新表格
				departmenttable();
			} else {
				// 否则提示信息：修改失败请联系管理员
				JOptionPane.showMessageDialog(this, "修改失败请联系管理员", "提示信息",
						JOptionPane.ERROR_MESSAGE);
			}

		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			try {
				//如果数据库访问异常,则回滚
				con.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			e.printStackTrace();
		}

	}

	/**
	 * 添加部门管理信息
	 * 
	 * @author zzt
	 */

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//得到部门名称的文本框
		String d_name_zzt = jTextField2.getText();
		if (d_name_zzt.equals("")) {
			//提示信息：部门名称不能为空！
			JOptionPane.showMessageDialog(this, "部门名称不能为空！");
			jTextField2.requestFocus();
			return;
		}
		Connection con = null;
		String zhujian = null;
		String d_str = "";
		try {
			con = Databaseconnection.getconnection();
			//把查询部门编号的最大值存入max的结果集
			ResultSet max = Departmentaccess.findmax(con);
			//遍历结果集的所有数据找到最大值赋值给zhujian变量
			while (max.next()) {
				zhujian = max.getString("d_id");
			}
			//如果部门编号没用数据,则添加一条编号为“01”的数据
			if (zhujian == null) {
				d_str = "01";
			} else {
				//定义一个整形变量,从来存放当前部门编号里面的最大值加一
				int d_id_int = Integer.parseInt(zhujian) + 1;
				//在把已经加过一的整形变量转换为字符串放在d_str变量里
				d_str = Integer.toString(d_id_int);
				//实例化部门的构造方法
			}
			//实例化部门的构造方法
			Department dt = new Department(d_str, d_name_zzt);
			// 创建数据库连接
			// 设置数据库的自动提交方式为false
			con.setAutoCommit(false);
			// 访问数据库查询d_name字段值,如果当前数据库对应的d_name字段里面的值等于用户当前已经输入的值的情况下
			if (Departmentaccess.findname(con, d_name_zzt)) {
				// 提示信息：类型名称已经存在
				JOptionPane.showMessageDialog(this, "部门名称已经存在请重新输入", "错误信息",
						JOptionPane.ERROR_MESSAGE);
				// 部门编号文本框获得焦点
				jTextField2.requestFocus();
				// 部门名称文本框全选
				jTextField2.selectAll();
				return;
			}
			// 定义r变量存放结果集
			int r = Departmentaccess.insert(con, dt);
			// 如果r>=1
			if (r >= 1) {
				// 则提示信息：添加成功！
				JOptionPane.showMessageDialog(this, "添加成功！");
				// 开始数据库的手动提交方式
				con.commit();
				departmenttable();
				jTextField1.setText("");
				jTextField2.setText("");
			}
			// 如果r<1则提示信息部门编号插入失败，请联系系统管理员！
			if (r < 1) {

				Tools.connectionroolback(con, "部门编号插入失败，请联系系统管理员！");
				return;
			}
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
		} finally {
			try {
				//如果数据库访问异常,则回滚
				con.rollback();
				if (!con.isClosed())
					con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		this.dispose();
	}

	private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		int row = jTable1.getSelectedRow();
		jTextField1.setText((String) jTable1.getValueAt(row, 0));
		jTextField2.setText((String) jTable1.getValueAt(row, 1));
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextField2;
	// End of variables declaration//GEN-END:variables

}