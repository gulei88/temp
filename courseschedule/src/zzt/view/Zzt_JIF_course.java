/*
 * Zzt_JIF_course.java
 *
 * Created on __DATE__, __TIME__
 */

package zzt.view;

import java.awt.event.ActionEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import zxx.dao.PrintObjectExcel;

import czy.model.Tools;

import ggc.dao.GGC_CourseAddTable;
import ggc.dao.GGC_OfficeAddTable;
import ggc.view.throw_course;
import ggc.view.throw_office;
import global.dao.Courseaccess;
import global.dao.Databaseconnection;
import global.dao.ExcelFileFilter;
import global.dao.Fileselection;
import global.dao.Teacheraccess;
import global.dao.Teachingplanaccess;
import global.dao.Viewcourseaccess;
import global.dao.Viewofficeaccess;
import global.model.Course;
import global.model.Department;
import global.model.Fillcombobox;
import global.model.Major;
import global.model.Office;
import global.model.Teacher;
import global.model.Teachingplan;
import global.model.View_course;
import global.model.View_office;
import global.model.View_teacher;
import global.model.View_teachingplan;

/**
 *
 * @author  __USER__
 */
public class Zzt_JIF_course extends javax.swing.JInternalFrame {

	private View_teacher vt;
	private String o_id;
	private String m_id;
	private String d_id;
	private String tp_id;

	/** Creates new form Zzt_JIF_course */
	public Zzt_JIF_course() {

	}

	public Zzt_JIF_course(View_teacher vt) {
		initComponents();
		this.vt = vt;
		initComponents();
		Fillcombobox.filldepartment(jComboBox1);
		Fillcombobox.filloffice(o_id, jComboBox2);
		Fillcombobox.fillmajor(m_id, jComboBox3);
		Fillcombobox.fillteachingplan(tp_id, jComboBox5);
	}

	public void fillcourse() {
		DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
		dtm.setRowCount(0);
		// 取得部门下拉列表选择内容
		Department dm = (Department) jComboBox1.getSelectedItem();
		// 如果为空，则退出
		if (dm == null) {
			return;
		}
		//
		Office of = (Office) jComboBox2.getSelectedItem();
		if (of == null) {
			return;
		}
		Major mj = (Major) jComboBox3.getSelectedItem();
		if (mj == null) {
			return;
		}

		Teachingplan tp = (Teachingplan) jComboBox5.getSelectedItem();
		if (tp == null) {
			return;
		}
		ArrayList<View_course> alist = Courseaccess.getView_course(tp
				.getTp_id());
		if (alist.size() == 0)
			return;
		// 取出对应字段信息
		for (int i = 0; i < alist.size(); i++) {
			String d_name = alist.get(i).getD_name();
			String tp_name = alist.get(i).getTp_name();
			String cou_category = alist.get(i).getCou_category();
			String cou_id = alist.get(i).getCou_id();
			String cou_name = alist.get(i).getCou_name();
			float cou_credit = alist.get(i).getCou_credit();
			int cou_theoryhour = alist.get(i).getCou_theoryhour();
			int cou_exprimetalhour = alist.get(i).getCou_experimentalhours();
			int cou_practicehour = alist.get(i).getCou_practicehour();
			int cou_semester = alist.get(i).getCou_semester();
			int cou_type = alist.get(i).getCou_type();
			// 生成向量类型变量
			Vector v = new Vector();
			// 将取得数据添加到向量中
			v.add(d_name);
			v.add(tp_name);
			v.add(cou_id);
			v.add(cou_name);
			v.add(cou_category);
			v.add(cou_credit);
			v.add(cou_theoryhour);
			v.add(cou_exprimetalhour);
			v.add(cou_practicehour);
			v.add(cou_semester);
			v.add(cou_type);
			// 将向量添加到表格中
			dtm.addRow(v);
		}

	}

	private void setstate(String state) {
		if (state.equals("")) {
			jRadioButton1.setSelected(false);
			jRadioButton2.setSelected(false);
			return;
		}
		if (state.equals("必修")) {
			jRadioButton1.setSelected(true);
		} else {
			jRadioButton2.setSelected(true);
		}
	}

	private String getstate() {
		String state = "";
		if (jRadioButton1.isSelected()) {
			state = jRadioButton1.getText();
		}
		if (jRadioButton2.isSelected()) {
			state = jRadioButton2.getText();
		}
		return state;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

jPanel1 = new javax.swing.JPanel();
jLabel1 = new javax.swing.JLabel();
jLabel3 = new javax.swing.JLabel();
jComboBox1 = new javax.swing.JComboBox();
j4 = new javax.swing.JTextField();
j5 = new javax.swing.JTextField();
jLabel4 = new javax.swing.JLabel();
jLabel5 = new javax.swing.JLabel();
j2 = new javax.swing.JTextField();
jLabel6 = new javax.swing.JLabel();
j3 = new javax.swing.JTextField();
jLabel7 = new javax.swing.JLabel();
j6 = new javax.swing.JTextField();
jLabel8 = new javax.swing.JLabel();
jLabel9 = new javax.swing.JLabel();
jLabel10 = new javax.swing.JLabel();
jComboBox3 = new javax.swing.JComboBox();
jLabel12 = new javax.swing.JLabel();
jComboBox5 = new javax.swing.JComboBox();
j7 = new javax.swing.JTextField();
jLabel2 = new javax.swing.JLabel();
j1 = new javax.swing.JTextField();
jLabel11 = new javax.swing.JLabel();
jComboBox2 = new javax.swing.JComboBox();
jPanel2 = new javax.swing.JPanel();
jRadioButton1 = new javax.swing.JRadioButton();
jRadioButton2 = new javax.swing.JRadioButton();
j8 = new javax.swing.JTextField();
jScrollPane1 = new javax.swing.JScrollPane();
jTable1 = new javax.swing.JTable();
jButton1 = new javax.swing.JButton();
jButton2 = new javax.swing.JButton();
jButton3 = new javax.swing.JButton();
jButton4 = new javax.swing.JButton();
jButton5 = new javax.swing.JButton();
jButton6 = new javax.swing.JButton();
jButton7 = new javax.swing.JButton();

setClosable(true);
setIconifiable(true);
setMaximizable(true);
setTitle("\u8bfe\u7a0b\u65b9\u6848\u7ba1\u7406");

jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "\u8bfe\u7a0b\u65b9\u6848\u7ba1\u7406"));

jLabel1.setText("\u6559\u5b66\u8ba1\u5212\u540d\u79f0\uff1a");

jLabel3.setText("\u8bfe\u7a0b\u540d\u79f0\uff1a");

jComboBox1.addItemListener(new java.awt.event.ItemListener() {
public void itemStateChanged(java.awt.event.ItemEvent evt) {
jComboBox1ItemStateChanged(evt);
}
});

jLabel4.setText("\u8bfe\u7a0b\u5b66\u5206\uff1a");

jLabel5.setText("\u5b9e\u8df5\u5b66\u65f6\uff1a");



jLabel6.setText("\u7406\u8bba\u5b66\u65f6\uff1a");

jLabel7.setText("\u5b9e\u9a8c\u5b66\u65f6\uff1a");


jLabel8.setText("\u8bfe\u7a0bID\uff1a");

jLabel9.setText("\u5f00\u8bfe\u5b66\u671f\uff1a");

jLabel10.setText("\u6240\u5c5e\u90e8\u95e8\uff1a");

jComboBox3.addItemListener(new java.awt.event.ItemListener() {
public void itemStateChanged(java.awt.event.ItemEvent evt) {
jComboBox3ItemStateChanged(evt);
}
});
jComboBox3.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jComboBox3ActionPerformed(evt);
}
});

jLabel12.setText("\u8bfe\u7a0b\u7c7b\u578b\uff1a");

jComboBox5.addItemListener(new java.awt.event.ItemListener() {
public void itemStateChanged(java.awt.event.ItemEvent evt) {
jComboBox5ItemStateChanged(evt);
}
});

jLabel2.setText("\u6240\u5c5e\u4e13\u4e1a\uff1a");

jLabel11.setText("\u79d1\u5ba4\u540d\u79f0\uff1a");

jComboBox2.addItemListener(new java.awt.event.ItemListener() {
public void itemStateChanged(java.awt.event.ItemEvent evt) {
jComboBox2ItemStateChanged(evt);
}
});

jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "\u8bfe\u7a0b\u6027\u8d28"));

jRadioButton1.setText("\u5fc5\u4fee");
jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jRadioButton1ActionPerformed(evt);
}
});

jRadioButton2.setText("\u9009\u4fee");
jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jRadioButton2ActionPerformed(evt);
}
});

javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
jPanel2.setLayout(jPanel2Layout);
jPanel2Layout.setHorizontalGroup(
jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
.addContainerGap(17, Short.MAX_VALUE)
.addComponent(jRadioButton1)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jRadioButton2)
.addContainerGap())
);
jPanel2Layout.setVerticalGroup(
jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel2Layout.createSequentialGroup()
.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jRadioButton2)
.addComponent(jRadioButton1))
.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
);

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(45, 45, 45)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
.addComponent(jLabel10)
.addComponent(jLabel3)
.addComponent(jLabel5))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(j7)
.addComponent(j2)
.addComponent(jComboBox1, 0, 188, Short.MAX_VALUE))
.addGap(40, 40, 40)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(j8)
.addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(j3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
.addGap(24, 24, 24)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jLabel4)
.addComponent(jLabel2))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(j4)
.addComponent(jComboBox3, 0, 190, Short.MAX_VALUE))
.addGap(15, 15, 15)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
.addComponent(jLabel1)
.addComponent(jLabel6)))
.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(j5)
.addComponent(jComboBox5, 0, 186, Short.MAX_VALUE))
.addGap(18, 18, 18)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(jLabel7)
.addComponent(jLabel8))
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addComponent(j1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
.addComponent(j6, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
.addContainerGap(70, javax.swing.GroupLayout.PREFERRED_SIZE))
);
jPanel1Layout.setVerticalGroup(
jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(32, 32, 32)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel2)
.addComponent(jLabel1)
.addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel8)
.addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGap(45, 45, 45)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel3)
.addComponent(jLabel4)
.addComponent(jLabel12)
.addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel6)
.addComponent(jLabel7)
.addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel10)
.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel11)
.addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(jPanel1Layout.createSequentialGroup()
.addGap(36, 36, 36)
.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jLabel5)
.addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
.addContainerGap(35, Short.MAX_VALUE))
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(25, 25, 25))))
);

jTable1.setModel(new javax.swing.table.DefaultTableModel(
	new Object [][] {
		
	},
	new String [] {
		"所属部门", "教学计划名称", "课程ID", "课程名称", "课程分类", "课程学分", "理论学时", "实验学时", "实践学时", "开课学期", "课程性质"
	}
) {
	boolean[] canEdit = new boolean [] {
		false, false, false, false, false, false, false, false, false, false, false
	};

	public boolean isCellEditable(int rowIndex, int columnIndex) {
		return canEdit [columnIndex];
	}
});
jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
public void mouseClicked(java.awt.event.MouseEvent evt) {
jTable1MouseClicked(evt);
}
});
jScrollPane1.setViewportView(jTable1);

jButton1.setText("\u6dfb\u52a0");
jButton1.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton1ActionPerformed(evt);
}
});

jButton2.setText("\u4fee\u6539");
jButton2.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton2ActionPerformed(evt);
}
});

jButton3.setText("\u5220\u9664");
jButton3.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton3ActionPerformed(evt);
}
});

jButton4.setText("\u9000\u51fa");
jButton4.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton4ActionPerformed(evt);
}
});

jButton5.setText("\u5bfc\u5165");
jButton5.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton5ActionPerformed(evt);
}
});

jButton6.setText("\u6570\u636e\u5bfc\u51fa");
jButton6.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton6ActionPerformed(evt);
}
});

jButton7.setText("\u5bfc\u5165\u683c\u5f0f\u5bfc\u51fa");
jButton7.addActionListener(new java.awt.event.ActionListener() {
public void actionPerformed(java.awt.event.ActionEvent evt) {
jButton7ActionPerformed(evt);
}
});

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
getContentPane().setLayout(layout);
layout.setHorizontalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addContainerGap()
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jScrollPane1)
.addGroup(layout.createSequentialGroup()
.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(18, 18, 18)
.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(18, 18, 18)
.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
.addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
.addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
.addGap(18, 18, 18)
.addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jButton7)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
.addContainerGap(24, Short.MAX_VALUE))
);
layout.setVerticalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
.addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
.addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
.addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
.addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
.addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
.addContainerGap())
);

pack();
}// </editor-fold>

	//GEN-END:initComponents
	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		JFileChooser fDialog = new JFileChooser();
		// 初始化ExcelFileFilter文件类型过滤类
		ExcelFileFilter excelFilter = new ExcelFileFilter();
		// 设置文本框类型
		fDialog.addChoosableFileFilter(excelFilter);
		// 设置文件选择框的标题
		fDialog.setFileFilter(excelFilter);
		// 浏览文件
		fDialog.setDialogTitle("请选择文件");
		// 弹出选择框
		int returnVal = fDialog.showOpenDialog(null);
		// 定义table变量用来存储要浏览文件的路径
		String table = fDialog.getSelectedFile().toString();
		//		System.out.println(table);
		// 初始化office_List数组,把判定的错误信息放在office_List数组列表里
		List<String> course_List = GGC_CourseAddTable.getCourseThrow(table);
		//		System.out.println(department_List);
		// 判断office_List的错误信息个数,如果为空则导入成功,刷新页面
		if (course_List.size() == 0 || course_List == null) {
			JOptionPane.showMessageDialog(this, "导入成功", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			fillcourse();
		} else {
			// 首先定义一个字符串变量为str
			String str = "";
			// 遍历数组列表错误信息
			for (String item : course_List) {
				// 把遍历过的错误信息,存放到str变量当中
				str += item + "\n";
			}
			// 提示信息：把错误信息输出到前台页面当中！
			//			JOptionPane.showMessageDialog(this, str, "提示信息",
			//					JOptionPane.ERROR_MESSAGE);
			throw_course th = new throw_course(null, true);
			th.infomation(str);
			th.setVisible(true);
		}
	}

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//调用导出方法把文件的路径存放在tabletwo变量里
		File Filename = Fileselection.exportselect();
		File filenametow = new File(Filename + ".xls");
		String filetable = filenametow.toString();
		//		 System.out.println(Filename+".xls");
		String cou_id = null;
		//实例化部门列表，把部门信息存放在calist变量中
		ArrayList<Course> caList = ggc.dao.Courseaccess.getcourse(cou_id);
		List<Course> list = new ArrayList<Course>();
		//设置excel表头信息
		String[] header = { "课程编号", "教学计划编号", "课程分类", "课程名称", "课程学分", "理论学时",
				"实验学时", "实践学时", "开课学时", "课程性质", "学院编号" };
		//		 File Filename =new File() ;
		//		 System.out.println(Filename);
		//		
		JFileChooser fDialog = new JFileChooser();
		if (Filename == null) {
			//			 System.out.println("文件名为null");
			return;
		}
		//怎么拿到导出之后的文件名
		if (filenametow.exists()) {
			System.out.println(filenametow.exists());
			int overwriteSelect = JOptionPane.showConfirmDialog(this,
					"<html><font size=3>文件" + filenametow.getName()
							+ "已存在，是否覆盖?</font><html>", "是否覆盖?",
					JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
			System.out.println(overwriteSelect);
			if (overwriteSelect == JOptionPane.YES_OPTION) {

				List<String> aList = PrintObjectExcel.printExcel(caList,
						filetable, header);
				if (aList.size() == 0) {
					JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
							JOptionPane.INFORMATION_MESSAGE);
				} else {
					String str = "";
					for (String item : aList) {
						str += item + "\n";
					}
					JOptionPane.showMessageDialog(this, str, "错误信息",
							JOptionPane.ERROR_MESSAGE);
				}
			} else {
				return;
			}
		}
		List<String> aList = PrintObjectExcel.printExcel(caList, filetable,
				header);
		if (aList.size() == 0) {
			JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			String str = "";
			for (String item : aList) {
				str += item + "\n";
			}
			JOptionPane.showMessageDialog(this, str, "错误信息",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//调用导出方法把文件的路径存放在tabletwo变量里
		File Filename = Fileselection.exportselect();
		File filenametow = new File(Filename + ".xls");
		String filetable = filenametow.toString();
		//		 System.out.println(Filename+".xls");
		String cou_id = null;
		//实例化部门列表，把部门信息存放在calist变量中
		ArrayList<View_course> caList = Viewcourseaccess.getCourses(cou_id);
		List<View_course> list = new ArrayList<View_course>();
		//设置excel表头信息
		String[] header = { "教学计划编号", "教学计划名称", "专业编号", "备注", "课程分类", "课程编号",
				"课程名称", "课程学分", "理论学时", "实验学时", "实践学时", "开课学时", "课程性质", "学院编号",
				"学院名称" };
		//		 File Filename =new File() ;
		//		 System.out.println(Filename);
		//		
		JFileChooser fDialog = new JFileChooser();
		if (Filename == null) {
			//			 System.out.println("文件名为null");
			return;
		}
		//怎么拿到导出之后的文件名
		if (filenametow.exists()) {
			System.out.println(filenametow.exists());
			int overwriteSelect = JOptionPane.showConfirmDialog(this,
					"<html><font size=3>文件" + filenametow.getName()
							+ "已存在，是否覆盖?</font><html>", "是否覆盖?",
					JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
			System.out.println(overwriteSelect);
			if (overwriteSelect == JOptionPane.YES_OPTION) {

				List<String> aList = PrintObjectExcel.printExcel(caList,
						filetable, header);
				if (aList.size() == 0) {
					JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
							JOptionPane.INFORMATION_MESSAGE);
				} else {
					String str = "";
					for (String item : aList) {
						str += item + "\n";
					}
					JOptionPane.showMessageDialog(this, str, "错误信息",
							JOptionPane.ERROR_MESSAGE);
				}
			} else {
				return;
			}
		}
		List<String> aList = PrintObjectExcel.printExcel(caList, filetable,
				header);
		if (aList.size() == 0) {
			JOptionPane.showMessageDialog(this, "导出成功", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			String str = "";
			for (String item : aList) {
				str += item + "\n";
			}
			JOptionPane.showMessageDialog(this, str, "错误信息",
					JOptionPane.ERROR_MESSAGE);
		}
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		// TODO add your handling code here:
		//记录表格当前的行数
		int i = jTable1.getSelectedRow();
		jTable1.setRowSelectionAllowed(true);
		String zztString = "";
		String zzt = "";
		//如果i==-1，说明没有选中行
		if (i == -1) {
			//提示信息：请选中要修改的记录
			JOptionPane.showMessageDialog(this, "请选中要删除的记录", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			return;
		} else {
			//定义一个数组变量row存放当前选中的所有行
			int[] row = jTable1.getSelectedRows();
			//定义一个count用来存放行数
			int count = row.length;
			//遍历行数
			for (int a = 0; a < count; a++) {
				//定义一个变量来存放教学计划的第row[a]行第0列
				String t_id = (String) jTable1.getValueAt(row[a], 3);
				//定义一个空字符串变量st
				String st = ",";
				//用来存放满足删除多条语句要求的sql语句
				zzt = "(" + (zztString += "'" + t_id + "'" + (st)) + ")";
				//如果sql语句的最后一个字符是“)”则删除最后两位字符在加上一个“)”
				if (zzt.endsWith(")")) {
					zzt = zzt.substring(0, zzt.length() - 2) + ")";
				}
			}
			//提示信息,确认要删除当前记录嘛？,如果确定，则删除当前选中的记录
			int r = JOptionPane.showConfirmDialog(this, "确认要删除当前记录嘛？", "确认信息",
					JOptionPane.OK_CANCEL_OPTION);
			if (r == 0) {
				Connection con = null;
				try {
					//创建数据库连接
					con = Databaseconnection.getconnection();
					//设置数据库连接的自动提交为(false)
					con.setAutoCommit(false);
					//定义一个整型变量re来存放结果集
					int re;
					//用re来记录删除教学计划编号的方法的结果集
					re = Courseaccess.Delete(con, zzt);
					//如果结果集  > 0 则删除成功
					if (re > 0) {
						JOptionPane.showMessageDialog(this, "删除记录成功！", "确认信息",
								JOptionPane.INFORMATION_MESSAGE);
						//开启数据库的手动提交
						con.commit();
						//实时刷新jtble1表格数据
						fillcourse();
						j1.setText("");
						j2.setText("");
						j3.setText("");
						j4.setText("");
						j5.setText("");
						j6.setText("");
						j7.setText("");
						j8.setText("");
					} else {
						JOptionPane.showMessageDialog(this,
								"删除失败，请联系管理员进行相关操作！", "错误信息",
								JOptionPane.ERROR_MESSAGE);
					}

				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					//捕获错误异常情况进行处理,定义一个str变量,用来存放访问sql语句错误的状态值
					String str = "23000";
					//如果当前访问的状态值等于str,则提示相应信息
					if (e.getSQLState().equals(str)) {
						JOptionPane.showMessageDialog(this,
								"由于此编号有外键约束影响,暂时不能删除！", "提示信息",
								JOptionPane.INFORMATION_MESSAGE);
					}
				}
			}
		}

	}

	private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		int row = jTable1.getSelectedRow();
		j1.setText((String) jTable1.getValueAt(row, 2));
		j2.setText((String) jTable1.getValueAt(row, 3));
		j3.setText((String) jTable1.getValueAt(row, 4));
		j4.setText((String) jTable1.getValueAt(row, 5).toString());
		j5.setText((String) jTable1.getValueAt(row, 6).toString());
		j6.setText((String) jTable1.getValueAt(row, 7).toString());
		j7.setText((String) jTable1.getValueAt(row, 8).toString());
		j8.setText((String) jTable1.getValueAt(row, 9).toString());
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		this.dispose();
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		// TODO add your handling code here:
		//得到教学计划id的文本框
		String cou_id = j1.getText();
		//得到教学计划名称的文本框
		String cou_name = j2.getText();
		//得到教学计划备注的文本框
		String cou_category = j3.getText();
		float cou_credit = Float.parseFloat(j4.getText().toString());
		int cou_theoryhour = Integer.parseInt(j5.getText().toString());
		int cou_exper = Integer.parseInt(j6.getText().toString());
		int cou_practiehour = Integer.parseInt(j7.getText().toString());
		int cou_semester = Integer.parseInt(j8.getText().toString());

		Department jcbox1 = (Department) jComboBox1.getSelectedItem();
		String d_id = jcbox1.getD_id();

		Office jcbox2 = (Office) jComboBox2.getSelectedItem();
		String o_id = jcbox2.getO_id();

		Major jcbox3 = (Major) jComboBox3.getSelectedItem();
		String m_id = jcbox3.getM_id();

		Teachingplan jcbox4 = (Teachingplan) jComboBox5.getSelectedItem();
		String tp_id = jcbox4.getTp_id();

		//		int cou_type = Integer.parseInt((String) jComboBox4.getSelectedItem());

		//		String cou_tyString = (String)jComboBox4.getSelectedItem();

		int cou_type = 1;
		//		if(cou_tyString.equals("必修")){
		//			cou_type = 1;
		//		}else{
		//			cou_type = 0;
		//		}

		if (j6.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "实验学时不能为空！");
			j6.requestFocus();
		}
		//		
		if (j7.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "实践学时不能为空！");
			j7.requestFocus();
		}
		//		
		//				// 如果教学计划id文本框内容为空
		if (j2.getText().equals("")) {
			// 提示信息：教学计划id不能为空！
			JOptionPane.showMessageDialog(this, "课程名称不能为空！");
			j2.requestFocus();
			return;
		}
		if (j3.getText().equals("")) {
			// 提示信息：教学计划id不能为空！
			JOptionPane.showMessageDialog(this, "课程类型不能为空！");
			j3.requestFocus();
			return;
		}
		//				
		if (j4.getText().equals("")) {
			// 提示信息：教学计划id不能为空！
			JOptionPane.showMessageDialog(this, "课程学分不能为空！");
			j4.requestFocus();
			return;
		}
		//				// 如果教学计划id文本框内容为空
		if (j1.getText().equals("")) {
			// 提示信息：部门名称不能为空！
			JOptionPane.showMessageDialog(this, "课程id不能为空！");
			j1.requestFocus();
			return;
		}
		//				
		if (j5.getText().equals("")) {
			// 提示信息：部门名称不能为空！
			JOptionPane.showMessageDialog(this, "理论学时不能为空！");
			j5.requestFocus();
			return;
		}

		Connection con = null;
		try {
			// 创建数据库连接
			con = Databaseconnection.getconnection();
			// 实例化教学计划的构造方法
			Course cs = new Course(cou_id, tp_id, cou_category, cou_name,
					cou_credit, cou_theoryhour, cou_exper, cou_practiehour,
					cou_semester, cou_type, d_id);
			// 设置数据库的自动提交方式为false
			//			con.setAutoCommit(false);
			// 访问数据库查询教学计划编号字段值,如果当前数据库对应的字段里面的值等于用户当前已经输入的值的情况下
			//			if (Courseaccess.findid(con, cou_id)) {
			//				// 提示信息：类型编号已经存在
			//				JOptionPane.showMessageDialog(this, "教学计划id已经存在请重新输入", "错误信息",
			//						JOptionPane.ERROR_MESSAGE);
			//				// jTextField1文本框获得焦点
			//				j4.requestFocus();
			//				// jtexfField1文本框全选
			//				j4.selectAll();
			//				return;
			//			}
			// 访问数据库查询教学计划名称字段值,如果当前数据库对应的字段里面的值等于用户当前已经输入的值的情况下
			//			if (Courseaccess.findname(con, cou_name)) {
			//				// 提示信息：类型名称已经存在
			//				JOptionPane.showMessageDialog(this, "教学计划名称已经存在请重新输入", "错误信息",
			//						JOptionPane.ERROR_MESSAGE);
			//				// jTextField1文本框获得焦点
			//				j5.requestFocus();
			//				// jtexfField1文本框全选
			//				j5.selectAll();
			//				return;
			//			}
			// 定义r变量存放结果集
			int r = Courseaccess.insert(con, cs);
			// 如果r>=1
			if (r >= 1) {
				// 则提示信息：添加成功！
				JOptionPane.showMessageDialog(this, "添加成功！");
				// 开始数据库的手动提交方式
				//				con.commit();
				//调用fillteachingplan方法刷新表格内容
				fillcourse();
				//清空教学计划id的文本框
				j4.setText("");
				//清空教学计划名称的文本框
				j5.setText("");
				//清空教学计划备注的文本框
			}
			// 如果记录集1则提示信息教学计划编号插入失败，请联系系统管理员！
			if (r < 1) {
				Tools.connectionroolback(con, "教师编号插入失败，请联系系统管理员！");
				return;
			}
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
		} finally {
			try {
				//如果插入异常则回滚
				//				con.rollback();
				if (!con.isClosed())
					con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	private void showMessageDialog(Zzt_JIF_course zzt_JIF_course, String string) {
		// TODO Auto-generated method stub

	}

	private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {
		// TODO add your handling code here:
		Office of = (Office) jComboBox2.getSelectedItem();
		if (of == null) {
			return;
		}
		String o_id = of.getO_id();
		Fillcombobox.fillmajor(o_id, jComboBox3);
	}

	private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {
		// TODO add your handling code here:
		Major mj = (Major) jComboBox3.getSelectedItem();
		//如果为空则返回
		if (mj == null) {
			return;
		}
		String m_id = mj.getM_id();
		//调用静态方法通过教学计划编号得到当前专业名称
		Fillcombobox.fillteachingplan(m_id, jComboBox5);
	}

	private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {
		// TODO add your handling code here:
		fillcourse();
	}

	private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {
		// TODO add your handling code here:
		// TODO add your handling code here:
		//得到部门下拉列表的内容
		Department dm = (Department) jComboBox1.getSelectedItem();
		//如果为空则返回
		if (dm == null)
			return;
		String d_id = dm.getD_id();
		//调用静态方法通过部门编号得到当前专业名称
		Fillcombobox.filloffice(d_id, jComboBox2);
		//设置专业下拉列表为空
		//				jComboBox3.setSelectedItem(null);
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		// TODO add your handling code here:
		// 记录jtble1表格当前的行
		int row = jTable1.getSelectedRow();
		// 如果i==-1，说明没有选中行
		if (row == -1) {
			// 提示信息：请选中要修改的记录
			JOptionPane.showMessageDialog(this, "请选中要修改的记录", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			return;
		}
		// 如果教学计划id文本框中没有输入内容
		if (j1.getText().equals("")) {
			// 提示信息:请输入教学计划id
			JOptionPane.showMessageDialog(this, "请输入教学计划id！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j1.requestFocus();
			return;
		}
		if (j2.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j2.requestFocus();
			return;
		}
		if (j3.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j3.requestFocus();
			return;
		}
		if (j4.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j4.requestFocus();
			return;
		}
		if (j5.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j5.requestFocus();
			return;
		}
		if (j6.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j6.requestFocus();
			return;
		}
		if (j7.getText().equals("")) {
			// 提示信息:请输入教学计划名称
			JOptionPane.showMessageDialog(this, "请输入教学计划名称！", "提示信息",
					JOptionPane.INFORMATION_MESSAGE);
			j7.requestFocus();
			return;
		}
		String couid = (String) jTable1.getValueAt(row, 2);
		String couname = (String) jTable1.getValueAt(row, 3);
		String coucategory = (String) jTable1.getValueAt(row, 4);
		float coucredit = (Float) jTable1.getValueAt(row, 5);
		int coutheoryhour = (Integer) jTable1.getValueAt(row, 6);
		int couexper = (Integer) jTable1.getValueAt(row, 7);
		int coupractiehour = (Integer) jTable1.getValueAt(row, 8);
		// 定义一个变量来存放表格的第i行第0列的字符串
		//得到教学计划id的文本框
		String cou_id = j1.getText();
		//得到教学计划名称的文本框
		String cou_name = j2.getText();
		//得到教学计划备注的文本框
		String cou_category = j3.getText();
		float cou_credit = Float.parseFloat(j4.getText().toString());
		int cou_theoryhour = Integer.parseInt(j5.getText().toString());
		int cou_exper = Integer.parseInt(j6.getText().toString());
		int cou_practiehour = Integer.parseInt(j7.getText().toString());
		int cou_semester = Integer.parseInt(j8.getText().toString());
		int cou_type = 1;

		Department jcbox1 = (Department) jComboBox1.getSelectedItem();
		String d_id = jcbox1.getD_id();

		Office jcbox2 = (Office) jComboBox2.getSelectedItem();
		String o_id = jcbox2.getO_id();

		Major jcbox3 = (Major) jComboBox3.getSelectedItem();
		String m_id = jcbox3.getM_id();

		Teachingplan jcbox4 = (Teachingplan) jComboBox5.getSelectedItem();
		String tp_id = jcbox4.getTp_id();
		Connection con = null;
		try {
			// 创建数据库连接
			con = Databaseconnection.getconnection();
			// 设置数据库的自动提交方式为false
			//					con.setAutoCommit(false);
			// 如果当前的文本框的内容和选中的对应的列的值不匹配的时,说明用户要修改信息！
			//					if (!(cou_id.equals(couid))) {
			//						// 访问数据库查询教学计划编号字段值,如果当前数据库对应的字段里面的值等于用户当前已经输入的值的情况下
			//						if (Courseaccess.findid(con, cou_id)) {
			//							// 提示信息：教学计划编号已经存在
			//							JOptionPane.showMessageDialog(this, "教学计划编号已经存在请重新输入",
			//									"错误信息", JOptionPane.ERROR_MESSAGE);
			//							// jTextField1文本框获得焦点
			//							j1.requestFocus();
			//							// jtexfField1文本框全选
			//							j1.selectAll();
			//							return;
			//						}
			//					}
			//					
			//					if (!(cou_name.equals(couname))) {
			//						if (Courseaccess.findname(con, cou_name)) {
			//							// 提示信息：教学计划名称已经存在
			//							JOptionPane.showMessageDialog(this, "教学计划名称已经存在请重新输入",
			//									"错误信息", JOptionPane.ERROR_MESSAGE);
			//							// jTextField1文本框获得焦点
			//							j2.requestFocus();
			//							// jtexfField1文本框全选
			//							j2.selectAll();
			//							return;
			//						}
			//					}
			// 判定当前的输入的教学计划id和教学计划名称与数据库里面的是否重复,如果重复则提示信息
			//					if ((cou_id.equals(couid)) && (cou_name.equals(couname))
			//							&& (cou_category.equals(coucategory))) {
			//						// 提示信息:请输入您要修改的信息！
			//						JOptionPane.showMessageDialog(this, "请输入您要修改的信息！", "提示信息",
			//								JOptionPane.INFORMATION_MESSAGE);
			//						return;
			//					}
			// 定义一个变量r用来存储update方法返回的结果集
			int r = Courseaccess.update(con, cou_id, new Course(cou_id, tp_id,
					cou_category, cou_name, cou_credit, cou_theoryhour,
					cou_exper, cou_practiehour, cou_semester, cou_type, d_id));
			// 如果结果集大于0的话
			if (r > 0) {
				// 提示信息修改成功
				JOptionPane.showMessageDialog(this, "修改成功", "提示信息",
						JOptionPane.INFORMATION_MESSAGE);
				j1.setText("");
				j2.setText("");
				j3.setText("");
				j4.setText("");
				j5.setText("");
				j6.setText("");
				j7.setText("");
				j8.setText("");
				// 开启数据库手动提交方式
				//						con.commit();
				// 调用fillteachingplan方法进行实时刷新表格
				fillcourse();
			} else {
				// 否则提示信息：修改失败请联系管理员
				JOptionPane.showMessageDialog(this, "修改失败请联系管理员", "提示信息",
						JOptionPane.ERROR_MESSAGE);
			}
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JTextField j1;
	private javax.swing.JTextField j2;
	private javax.swing.JTextField j3;
	private javax.swing.JTextField j4;
	private javax.swing.JTextField j5;
	private javax.swing.JTextField j6;
	private javax.swing.JTextField j7;
	private javax.swing.JTextField j8;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JComboBox jComboBox1;
	private javax.swing.JComboBox jComboBox2;
	private javax.swing.JComboBox jComboBox3;
	private javax.swing.JComboBox jComboBox5;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JRadioButton jRadioButton1;
	private javax.swing.JRadioButton jRadioButton2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	// End of variables declaration//GEN-END:variables

}