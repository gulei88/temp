package util;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

public class printObiectExcel {

	/**
	 * 异常集合
	 * 出现异常抛出
	 * 
	 */
	public static ArrayList<String> exception=new ArrayList<String>();
	/**
	 * 
	 * @param list
	 * @param header
	 * @param file
	 * @author 将
	 * @return
	 */
	public static <E> List<String> printExcel(List<E> list,String[] header,String file ) {
		List<Object> mlist = new ArrayList<Object>();
		for (Object e : list) {
			Object obj = (Object) e;
			mlist.add(obj);
		}
		if (mlist.size()==0) {
			exception.add("导入数据为空");
			return null;
		}
		printFile(mlist, header, file);
		return exception;
	}
	/**
	 *    	将数据内容打印到文件中
	 * @param list 数据数组
	 * @param header 表头信息
	 * @param file 文件名
	 */
	public static void printFile(List<Object> list,String[] header,String file) {
		HSSFWorkbook h=new HSSFWorkbook();//新建excel表格
		HSSFSheet sheet=h.createSheet("部门");//新建工作簿
		HSSFRow row=sheet.createRow(0);//新建表头
		for (int i = 0; i < header.length; i++) {
			row.createCell(i).setCellValue(header[i]);//设置表头
		}
		/*
		 * 写入行
		 */
		for (int i = 0; i < list.size(); i++) {
			row=sheet.createRow(i+1);//下一行
			Object object=list.get(i);//将第i行数据取出
			Class c=object.getClass();//对象存放到c中
			Field[] f=c.getDeclaredFields();//将c中数据存储到文件数组中
			/*
			 * 写入列
			 */
			for (int j = 0; j < f.length; j++) {
				Field t=f[j];
				String temp="";
				t.setAccessible(true);
				try {
					if (t.get(object)!=null) {
						temp=t.get(object).toString();
						row.createCell(j).setCellValue(temp);;
					}
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					exception.add("参数不合法");
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					exception.add("安全权限异常");
				}
			}
			
			OutputStream outputStream=null;
			try {
				outputStream=new FileOutputStream(file);
				h.write(outputStream);
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				exception.add("文件被占用");
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				exception.add("写入文件异常");
				e.printStackTrace();
			}finally {
				try {
					outputStream.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					exception.add("关闭异常");
					e.printStackTrace();
				}
			}
		}
	}
}
